version: "3.8"
services:

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    volumes:
      - ./db/mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      my_net:
        ipv4_address: 192.168.0.10
    ports:
      - 27017:27017

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      my_net:
        ipv4_address: 192.168.0.20
    ports:
      - 8081:8081

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - ./db/postgres:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/
    networks:
      my_net:
        ipv4_address: 192.168.0.30
    ports:
      - 5432:5432

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    networks:
      my_net:
        ipv4_address: 192.168.0.40
    ports:
      - 8080:8080

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    networks:
      my_net:
        ipv4_address: 192.168.0.50
    ports:
      - 15432:80

  mlflow:
    container_name: mlflow
    build: 
      context: docker
      dockerfile: mlflow.dockerfile
    ports:
      - 5000:5000
    restart: always
    volumes:
      - .:/home
    working_dir: /home
    command: mlflow server --backend-store-uri sqlite:////home/mlflow.db --host 0.0.0.0 --port 5000
    networks:
          my_net:
            ipv4_address: 192.168.0.60

  tensorflow:
    container_name: tensorflow
    build:
      context: docker
      dockerfile: tensorflow.dockerfile
    volumes:
      - ./:/app
    networks:
      my_net:
        ipv4_address: 192.168.0.70
    ports:
      - 8000:8000
    user: "${UID}:${GID}"
    working_dir: /app
    stdin_open: true
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # command: python3 ./main.py

  label_studio:
    image: heartexlabs/label-studio:latest
    container_name: label_studio
    ports:
      - 8080:8080
    volumes:
      - .:/label-studio/data
    environment:
      - LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED=true
      - LABEL_STUDIO_LOCAL_FILES_DOCUMENT_ROOT=/label-studio/data

networks:
  my_net:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24